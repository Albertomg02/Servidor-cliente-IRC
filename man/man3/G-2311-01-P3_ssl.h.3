.TH "includes/G-2311-01-P3_ssl.h" 3 "Domingo, 7 de Mayo de 2017" "Redes 2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
includes/G-2311-01-P3_ssl.h \- : Funciones del módulo SSL  

.SH SYNOPSIS
.br
.PP
\fC#include 'G\-2311\-01\-P1_general\&.h'\fP
.br

.SS "Funciones"

.in +1c
.ti -1c
.RI "SSL_CTX * \fBinicializar_nivel_SSL\fP ()"
.br
.ti -1c
.RI "void \fBfijar_contexto_SSL\fP (SSL_CTX *cnt, const char *CA, const char *CApath, const char *f)"
.br
.ti -1c
.RI "SSL * \fBconectar_canal_seguro_SSL\fP (SSL_CTX *cnt, int socket)"
.br
.ti -1c
.RI "SSL * \fBaceptar_canal_seguro_SSL\fP (SSL_CTX *cnt, int socket)"
.br
.ti -1c
.RI "int \fBevaluar_post_connectar_SSL\fP (const SSL *ssl)"
.br
.ti -1c
.RI "int \fBenviar_datos_SSL\fP (SSL *ssl, const void *buffer, int len)"
.br
.ti -1c
.RI "int \fBrecibir_datos_SSL\fP (SSL *ssl, void *buffer, int len)"
.br
.ti -1c
.RI "int \fBcerrar_canal_SSL\fP (SSL *ssl, SSL_CTX *cnt, int socket)"
.br
.in -1c
.SH "Descripción detallada"
.PP 
: Funciones del módulo SSL 


.PP
\fBAutor:\fP
.RS 4
Oscar Garcia de Lara Parreño & Santiago Gomez Aguirre\&. Grupo: 2311 
.RE
.PP
\fBFecha:\fP
.RS 4
07-05-2017 
.RE
.PP

.PP
Definición en el archivo \fBG\-2311\-01\-P3_ssl\&.h\fP\&.
.SH "Documentación de las funciones"
.PP 
.SS "SSL* aceptar_canal_seguro_SSL (SSL_CTX * cnt, int socket)"
Dado un contexto SSL y un descriptor de socket esta función se encargará de bloquear la aplicación, que se quedará esperando hasta recibir un handshake por parte del cliente\&.  aceptar_canal_seguro_SSL 
.PP
\fBParámetros:\fP
.RS 4
\fIcnt\fP contexto ssl 
.br
\fIsocket\fP socket 
.RE
.PP
\fBDevuelve:\fP
.RS 4
socket ssl o null en caso de error 
.RE
.PP

.SS "int cerrar_canal_SSL (SSL * ssl, SSL_CTX * cnt, int socket)"
Esta función liberará todos los recursos y cerrará el canal de comunicación seguro creado previamente\&.  cerrar_canal_SSL 
.PP
\fBParámetros:\fP
.RS 4
\fIssl\fP socket ssl 
.br
\fIcnt\fP contexto ssl 
.br
\fIsocket\fP socket en que se ha estable conexion 
.RE
.PP
\fBDevuelve:\fP
.RS 4
-1 en caso de error 
.RE
.PP

.SS "SSL* conectar_canal_seguro_SSL (SSL_CTX * cnt, int socket)"
Dado un contexto SSL y un descriptor de socket esta función se encargará de obtener un canal seguro SSL iniciando el proceso de handshake con el otro extremo\&.  conectar_canal_seguro_SSL 
.PP
\fBParámetros:\fP
.RS 4
\fIcnt\fP contexto ssl 
.br
\fIsocket\fP socket 
.RE
.PP
\fBDevuelve:\fP
.RS 4
socket ssl o null en caso de error 
.RE
.PP

.SS "int enviar_datos_SSL (SSL * ssl, const void * buffer, int len)"
Esta función será el equivalente a la función de envío de mensajes que se realizó en la práctica 1, pero será utilizada para enviar datos a través del canal seguro\&.  enviar_datos_SSL 
.PP
\fBParámetros:\fP
.RS 4
\fIssl\fP socket ssl 
.br
\fIbuffer\fP lo que se va aescribir 
.br
\fIlen\fP tamaño de lo que se vaa escribir 
.RE
.PP
\fBDevuelve:\fP
.RS 4
tamaño de lo escrito, -1 en caso de error 
.RE
.PP

.SS "int evaluar_post_connectar_SSL (const SSL * ssl)"
Esta función comprobará una vez realizado el handshake que el canal de comunicación se puede considerar seguro\&.  evaluar_post_connectar_SSL 
.PP
\fBParámetros:\fP
.RS 4
\fIssl\fP socekt ssl 
.RE
.PP
\fBDevuelve:\fP
.RS 4
-1 en caso de error 
.RE
.PP

.SS "void fijar_contexto_SSL (SSL_CTX * cnt, const char * CA, const char * CApath, const char * f)"
Esta función se encargará de inicializar correctamente el contexto que será utilizado para la creación de canales seguros mediante SSL\&.  fijar_contexto_SSL 
.PP
\fBParámetros:\fP
.RS 4
\fIcnt\fP contexto ssl 
.br
\fICA\fP archivo ca\&.pem 
.br
\fICApath\fP ruta donde esta el archivo ca\&.pem 
.br
\fIf\fP certificado 
.RE
.PP

.SS "SSL_CTX* inicializar_nivel_SSL ()"
Esta función se encargará de realizar todas las llamadas necesarias para que la aplicación pueda usar la capa segura SSL  inicializar_nivel_SSL 
.PP
\fBDevuelve:\fP
.RS 4
contexto ssl o null en caso de error 
.RE
.PP

.SS "int recibir_datos_SSL (SSL * ssl, void * buffer, int len)"
Esta función será el equivalente a la función de lectura de mensajes que se realizó en la práctica 1, pero será utilizada para enviar datos a través del canal seguro\&.  recibir_datos_SSL 
.PP
\fBParámetros:\fP
.RS 4
\fIssl\fP socket ssl 
.br
\fIbuffer\fP donde se guardan los datos 
.br
\fIlen\fP tamaño del buffer 
.RE
.PP
\fBDevuelve:\fP
.RS 4
tamaño de lo leido, -1 en caso de error 
.RE
.PP

.SH "Autor"
.PP 
Generado automáticamente por Doxygen para Redes 2 del código fuente\&.
